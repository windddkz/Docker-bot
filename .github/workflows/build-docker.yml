name: Build Docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      target:
        description: 'Build Target Folder'
        required: true
        default: 'example'
      image:
        description: 'Docker Image Name'
        required: true
        default: 'example_name'
      version:
        description: 'Docker Image Version'
        required: true
        default: '1.0'
      logLevel:
        description: 'Log level'   
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install git python3 python2.7 unzip wget curl
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: ./${{ inputs.target }}
        file: ./${{ inputs.target }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.image }}:${{ inputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.image }}:latest
